#include<stdio.h>
#include<string.h>
#include<ctype.h>
main()
{
int i,j,len1,len2,numstr[100],numkey[100],numcipher[100];
char str[100],key[100],cipher[100];
printf("Enter a string text to encrypt\n");
gets(str);
for(i=0,j=0;i<strlen(str);i++)
{
 if(str[i]!=' ')
 {
 str[j]=toupper(str[i]);
 j++;
 }
}
str[j]='\0';
 for(i=0;i<strlen(str);i++)
 {
 numstr[i]=str[i]-'A';
 }
 printf("Enter key string of random text\n");
 gets(key);
for(i=0,j=0;i<strlen(key);i++)
{
 if(key[i]!=' ')
 {
 key[j]=toupper(key[i]);
 j++;
 }
}
key[j]='\0';
//obtaining numerical one time pad(OTP) or key
 for(i=0;i<strlen(key);i++)
 {
 numkey[i]=key[i]-'A';
 }

 for(i=0;i<strlen(str);i++)
 {
numcipher[i]=numstr[i]+numkey[i];
 }
 for(i=0;i<strlen(str);i++)
 {
 if(numcipher[i]>25)
 {
 numcipher[i]=numcipher[i]-26;
 }
 }
 printf("One Time Pad Cipher text is\n");
 for(i=0;i<strlen(str);i++)
 {
 printf("%c",(numcipher[i]+'A'));
 }
 printf("\n");
}


======================================================================================================================================================================================================================




#include<stdio.h>
#include<string.h>
#include<stdlib.h>
void encrypt(char *plaintext, char *key,char *ciphertext)
{
int i;
for(i=0; i<strlen(plaintext);i++)
{
ciphertext[i] = plaintext[i] ^ key[i];
}
ciphertext[i]='\0';
}
void decrypt(char *ciphertext , char *key , char *plaintext)
{
int i;
for(i=0; i<strlen(ciphertext);i++)
{
plaintext[i] = ciphertext[i] ^ key[i];
}
plaintext[i]='\0';
}
int main()
{
char plaintext[100];
char key[100];
char ciphertext[100];
printf("Enter Plaintext ");
scanf("%s",plaintext);
printf("Enter Key ");
scanf("%s",key);
encrypt(plaintext,key,ciphertext);
printf("Ciphertext : %s\n",ciphertext);
decrypt(ciphertext,key,plaintext);
printf("Plaintext: %s\n",plaintext);
return 0;
}




========================================================================================================================================================================================================================




#include<stdio.h>
#include<math.h>
long long int power(long long int a, long long int b, long long int P)
{
if (b == 1)
return a;
else
return (((long long int)pow(a, b)) % P);
}
int main()
{
long long int P, G, x, a, y, b, ka, kb;
P = 23;
printf("The value of P : %lld\n", P);
G = 9;
printf("The value of G : %lld\n\n", G);
a = 4;
printf("The private key a for Alice : %lld\n", a);
x = power(G, a, P);
b = 3;
printf("The private key b for Bob : %lld\n\n", b);
y = power(G, b, P);
ka = power(y, a, P); // Secret key for Alice
kb = power(x, b, P); // Secret key for Bob
printf("Secret key for the Alice is : %lld\n", ka);
printf("Secret Key for the Bob is : %lld\n", kb);
return 0;
}
 
 
 
 
 
 ==================================================================================================================================================================================================================
 
 
 
 
 
 
 #include <stdio.h> 
void main() {
int m, n;
printf("Enter-two integer numbers: "); 
scanf ("%d %d", &m, &n);
while (n > 0) 
{ int r = m % n;
m = n;
n = r;
}
printf ("GCD = %d \n",m);
}

 
